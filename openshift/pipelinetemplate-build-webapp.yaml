kind: Template
apiVersion: v1
metadata:
  name: pipelinetemplate-build-webapp
parameters:
  - name: APP_NAME
    required: true
  - name: RELEASE_VERSION
    required: true
  - name: STAGE
    required: true
    value: "test"
  - name: BUILD_TEMPLATE
    required: true
    value: "buildtemplate-webapp-binary.yaml"
  - name: DEPLOY_TEMPLATE
    required: true
    value: "deploytemplate-webapp.yaml"
  - name: TESTRUNNER_TEMPLATE
    required: true
    value: "testrunnertemplate-pod.yaml"
  - name: ARTIFACT_IMAGE_SUFFIX
    required: true
    value: "artifact"
  - name: GIT_URL
    required: true
  - name: GIT_CI_BRANCH
    required: true
  - name: DEVOPS_GIT_CI_BRANCH
    required: false
  - name: TEST_PORT
    value: "8081"
    required: true
  - name: BUILD_TOOL
    value: "shgradle"
  - name: CONTEXT_PATH
    required: true
    value: ROOT
  - name: HEALTH_URI
    required: true
    value: /
objects:
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: ${APP_NAME}-${RELEASE_VERSION}-pipeline
      generation: 1
      labels:
        app: ${APP_NAME}
        release: ${RELEASE_VERSION}
        stage: ${STAGE}
    spec:
      runPolicy: "SerialLatestOnly"
      triggers:
        - github:
            secretReference:
              name: git-webhook-secret
          type: GitHub
      source:
        git:
          uri: "${GIT_URL}"
          ref: "refs/heads/${GIT_CI_BRANCH}"
      strategy:
        jenkinsPipelineStrategy:
          type: JenkinsPipeline
          env:
            - name: "GIT_BRANCH"
              value: "${GIT_CI_BRANCH}"
          jenkinsfile: |-
            // Checkout devops source
            // This contains the actual Jenkins file named BuildWebappJenkinsfile

            node {
              def gitUrl = "${GIT_URL}"
              def gitDevopsUrl = gitUrl.take(gitUrl.lastIndexOf("/")+1) + "devops.git"
              def gitDevopsDir = "${env.WORKSPACE}/tmp-devopsrepo"

              def gitDevopsBranch
              if("${DEVOPS_GIT_CI_BRANCH}") {
                gitDevopsBranch = "${DEVOPS_GIT_CI_BRANCH}"
              } else {
                gitDevopsBranch = "${GIT_CI_BRANCH}"
              }

              dir ("${gitDevopsDir}") {
                git url: "${gitDevopsUrl}", branch: "${gitDevopsBranch}"
              }

              def gitUrlWithCredentials = gitUrl.substring(0, gitUrl.lastIndexOf("//")+2) + "${GITHUB_USERNAME}:${GITHUB_PASSWORD}@" + gitUrl.substring(gitUrl.lastIndexOf("//")+2)

              // Must pass all parameters as environment variables
              withEnv(["GIT_URL=${gitUrlWithCredentials}",
                        "APP_NAME=${APP_NAME}",
                        "RELEASE_VERSION=${RELEASE_VERSION}",
                        "STAGE=${STAGE}",
                        "BUILD_TEMPLATE=${BUILD_TEMPLATE}",
                        "DEPLOY_TEMPLATE=${DEPLOY_TEMPLATE}",
                        "TESTRUNNER_TEMPLATE=${TESTRUNNER_TEMPLATE}",
                        "ARTIFACT_IMAGE_SUFFIX=${ARTIFACT_IMAGE_SUFFIX}",
                        "GIT_CI_BRANCH=${GIT_CI_BRANCH}",
                        "TEST_PORT=${TEST_PORT}",
                        "BUILD_TOOL=${BUILD_TOOL}",
                        "CONTEXT_PATH=${CONTEXT_PATH}",
                        "HEALTH_URI=${HEALTH_URI}",
                        "GIT_DEVOPS_DIR=${gitDevopsDir}"]) {

                // This will load and run the actual Pipeline
                load "${gitDevopsDir}/openshift/BuildWebappJenkinsfile"
              }
            }